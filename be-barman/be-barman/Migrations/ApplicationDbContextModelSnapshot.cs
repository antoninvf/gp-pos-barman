// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using be_barman.Data;

#nullable disable

namespace be_barman.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("be_barman.Entities.ConfigurationEntity", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SettingName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("ConfigurationEntities");
                });

            modelBuilder.Entity("be_barman.Entities.CustomerEntity", b =>
                {
                    b.Property<string>("UUID")
                        .HasColumnType("varchar(255)");

                    b.Property<long?>("CreationTimestamp")
                        .HasColumnType("bigint");

                    b.Property<int>("TableID")
                        .HasColumnType("int");

                    b.HasKey("UUID");

                    b.HasIndex("TableID");

                    b.ToTable("CustomerEntities");
                });

            modelBuilder.Entity("be_barman.Entities.KitchenQueueEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.ToTable("KitchenQueueEntities");
                });

            modelBuilder.Entity("be_barman.Entities.OrderEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CustomerUUID")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<string>("ProductID")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CustomerUUID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderEntities");
                });

            modelBuilder.Entity("be_barman.Entities.ProductEntity", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageURL")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<bool>("SendToKitchenQueue")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ID");

                    b.ToTable("ProductEntities");
                });

            modelBuilder.Entity("be_barman.Entities.TableEntity", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Room")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("TableEntities");
                });

            modelBuilder.Entity("be_barman.Entities.CustomerEntity", b =>
                {
                    b.HasOne("be_barman.Entities.TableEntity", "Table")
                        .WithMany()
                        .HasForeignKey("TableID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("be_barman.Entities.KitchenQueueEntity", b =>
                {
                    b.HasOne("be_barman.Entities.OrderEntity", "Order")
                        .WithMany()
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("be_barman.Entities.OrderEntity", b =>
                {
                    b.HasOne("be_barman.Entities.CustomerEntity", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerUUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("be_barman.Entities.ProductEntity", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
